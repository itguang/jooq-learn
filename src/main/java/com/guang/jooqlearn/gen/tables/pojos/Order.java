/*
 * This file is generated by jOOQ.
 */
package com.guang.jooqlearn.gen.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Order implements Serializable {

    private static final long serialVersionUID = 1577024792;

    private Integer   orderId;
    private Integer   uid;
    private Long      amout;
    private Byte      status;
    private Timestamp orderTime;

    public Order() {}

    public Order(Order value) {
        this.orderId = value.orderId;
        this.uid = value.uid;
        this.amout = value.amout;
        this.status = value.status;
        this.orderTime = value.orderTime;
    }

    public Order(
        Integer   orderId,
        Integer   uid,
        Long      amout,
        Byte      status,
        Timestamp orderTime
    ) {
        this.orderId = orderId;
        this.uid = uid;
        this.amout = amout;
        this.status = status;
        this.orderTime = orderTime;
    }

    @NotNull
    public Integer getOrderId() {
        return this.orderId;
    }

    public void setOrderId(Integer orderId) {
        this.orderId = orderId;
    }

    public Integer getUid() {
        return this.uid;
    }

    public void setUid(Integer uid) {
        this.uid = uid;
    }

    @NotNull
    public Long getAmout() {
        return this.amout;
    }

    public void setAmout(Long amout) {
        this.amout = amout;
    }

    public Byte getStatus() {
        return this.status;
    }

    public void setStatus(Byte status) {
        this.status = status;
    }

    public Timestamp getOrderTime() {
        return this.orderTime;
    }

    public void setOrderTime(Timestamp orderTime) {
        this.orderTime = orderTime;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Order other = (Order) obj;
        if (orderId == null) {
            if (other.orderId != null)
                return false;
        }
        else if (!orderId.equals(other.orderId))
            return false;
        if (uid == null) {
            if (other.uid != null)
                return false;
        }
        else if (!uid.equals(other.uid))
            return false;
        if (amout == null) {
            if (other.amout != null)
                return false;
        }
        else if (!amout.equals(other.amout))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (orderTime == null) {
            if (other.orderTime != null)
                return false;
        }
        else if (!orderTime.equals(other.orderTime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.orderId == null) ? 0 : this.orderId.hashCode());
        result = prime * result + ((this.uid == null) ? 0 : this.uid.hashCode());
        result = prime * result + ((this.amout == null) ? 0 : this.amout.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.orderTime == null) ? 0 : this.orderTime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Order (");

        sb.append(orderId);
        sb.append(", ").append(uid);
        sb.append(", ").append(amout);
        sb.append(", ").append(status);
        sb.append(", ").append(orderTime);

        sb.append(")");
        return sb.toString();
    }
}
