/*
 * This file is generated by jOOQ.
 */
package com.guang.jooqlearn.gen.tables.daos;


import com.guang.jooqlearn.gen.tables.Author;
import com.guang.jooqlearn.gen.tables.records.AuthorRecord;

import java.sql.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AuthorDao extends DAOImpl<AuthorRecord, com.guang.jooqlearn.gen.tables.pojos.Author, Integer> {

    /**
     * Create a new AuthorDao without any configuration
     */
    public AuthorDao() {
        super(Author.AUTHOR, com.guang.jooqlearn.gen.tables.pojos.Author.class);
    }

    /**
     * Create a new AuthorDao with an attached configuration
     */
    @Autowired
    public AuthorDao(Configuration configuration) {
        super(Author.AUTHOR, com.guang.jooqlearn.gen.tables.pojos.Author.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.guang.jooqlearn.gen.tables.pojos.Author object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.guang.jooqlearn.gen.tables.pojos.Author> fetchById(Integer... values) {
        return fetch(Author.AUTHOR.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.guang.jooqlearn.gen.tables.pojos.Author fetchOneById(Integer value) {
        return fetchOne(Author.AUTHOR.ID, value);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<com.guang.jooqlearn.gen.tables.pojos.Author> fetchByFirstName(String... values) {
        return fetch(Author.AUTHOR.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<com.guang.jooqlearn.gen.tables.pojos.Author> fetchByLastName(String... values) {
        return fetch(Author.AUTHOR.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>date_of_birth IN (values)</code>
     */
    public List<com.guang.jooqlearn.gen.tables.pojos.Author> fetchByDateOfBirth(Date... values) {
        return fetch(Author.AUTHOR.DATE_OF_BIRTH, values);
    }

    /**
     * Fetch records that have <code>year_of_birth IN (values)</code>
     */
    public List<com.guang.jooqlearn.gen.tables.pojos.Author> fetchByYearOfBirth(Integer... values) {
        return fetch(Author.AUTHOR.YEAR_OF_BIRTH, values);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<com.guang.jooqlearn.gen.tables.pojos.Author> fetchByAddress(String... values) {
        return fetch(Author.AUTHOR.ADDRESS, values);
    }
}
